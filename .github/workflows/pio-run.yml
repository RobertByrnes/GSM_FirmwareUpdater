name: PlatformIO CI

on:
  push:
    branches: [ main ]
    tags: [ '*.*.*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Run PlatformIO
      run: |
        pwd
        pio run -e esp-wrover-kit

    - name: Move firmware to root 
      run: |
        pwd
        ls -lha
        sudo cp /home/runner/work/GSM_FirmwareUpdater/GSM_FirmwareUpdater/.pio/build/esp-wrover-kit/firmware.bin /home/runner/work/esp32-gsm/esp32-gsm/firmware.bin

    - name: Commit firmware.bin to repo
      uses: EndBug/add-and-commit@v9
      with:
        author_name: Robert Byrnes
        author_email: robbyrnes@hotmail.co.uk
        message: 'commit firmware.bin (generated by GitHub action)'
        add: 'firmware.bin'
        push: true

    name: Push File

  # copy-file:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Pushes firmware.bin
  #     uses: dmnemec/copy_file_to_another_repo_action@main
  #     env:
  #       API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
  #     with:
  #       source_file: 'test2.md'
  #       destination_repo: 'dmnemec/release-test'
  #       destination_folder: 'test-dir'
  #       user_email: 'example@email.com'
  #       user_name: 'dmnemec'
        # commit_message: 'A custom message for the commit'

  #   - name: Pushes firmware.txt
  #     uses: dmnemec/copy_file_to_another_repo_action@main
  #     env:
  #       API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
  #     with:
  #       source_file: 'test2.md'
  #       destination_repo: 'dmnemec/release-test'
  #       destination_folder: 'test-dir'
  #       user_email: 'example@email.com'
  #       user_name: 'dmnemec'
        # commit_message: 'A custom message for the commit'